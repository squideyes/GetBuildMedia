<!--
Copyright 2020 by SquidEyes, LLC

Permission is hereby granted, free of charge, to any person 
obtaining a copy of this software and associated documentation 
files (the "Software"), to deal in the Software without 
restriction, including without limitation the rights to use,
copy, modify, merge, publish, distribute, sublicense, and/or 
sell copies of the Software, and to permit persons to whom 
the Software is furnished to do so, subject to the following 
conditions:

The above copyright notice and this permission notice shall be 
included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND 
NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT 
HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, 
WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING 
FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR 
OTHER DEALINGS IN THE SOFTWARE.
-->
<Window x:Class="GetBuildMedia.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:GetBuildMedia"
        mc:Ignorable="d"
        Title="Build 2020 Media Downloader"
        Height="449"
        Width="800"
        WindowStartupLocation="CenterScreen">
    <Window.Resources>
        <local:InvertBoolConverter x:Key="boolConverter" />
        <Style TargetType="Button"
               x:Key="ButtonStyle">
            <Setter Property="Width"
                    Value="60" />
            <Setter Property="FontWeight"
                    Value="Bold" />
            <Setter Property="Margin"
                    Value="4,0,0,0" />
        </Style>
        <Style x:Key="placeHolder"
               TargetType="{x:Type TextBox}"
               BasedOn="{StaticResource {x:Type TextBox}}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Grid>
                            <TextBox Text="{Binding Path=Text,
                                                RelativeSource={RelativeSource TemplatedParent}, 
                                                Mode=TwoWay,
                                                UpdateSourceTrigger=PropertyChanged}"
                                     x:Name="textSource"
                                     Background="Transparent"
                                     Panel.ZIndex="2" />
                            <TextBox Text="{TemplateBinding Tag}"
                                     Background="{TemplateBinding Background}"
                                     Panel.ZIndex="1">
                                <TextBox.Style>
                                    <Style TargetType="{x:Type TextBox}">
                                        <Setter Property="Foreground"
                                                Value="Transparent" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=Text, Source={x:Reference textSource}}"
                                                         Value="">
                                                <Setter Property="Foreground"
                                                        Value="LightGray" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid Margin="8">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="83" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <GroupBox Header="Actions"
                  HorizontalContentAlignment="Center">
            <DockPanel Margin="0,8,0,0">
                <Button DockPanel.Dock="Right"
                        Content="Fetch"
                        Command="{Binding FetchCommand}"
                        Style="{StaticResource ButtonStyle}" />
                <Button DockPanel.Dock="Right"
                        Content="Cancel"
                        Command="{Binding CancelCommand}"
                        Style="{StaticResource ButtonStyle}" />
                <Button DockPanel.Dock="Right"
                        Content="About"
                        Command="{Binding AboutCommand}"
                        Style="{StaticResource ButtonStyle}" />
                <CheckBox Content="Fetch Videos"
                          Margin="0,0,4,0"
                          DockPanel.Dock="Left"
                          IsChecked="{Binding FetchVideos}"
                          IsEnabled="{Binding Fetching, Converter={StaticResource boolConverter}}"
                          VerticalContentAlignment="Center" />
                <CheckBox Content="Fetch Audios"
                          Margin="0,0,4,0"
                          DockPanel.Dock="Left"
                          IsChecked="{Binding FetchAudios}"
                          IsEnabled="{Binding Fetching, Converter={StaticResource boolConverter}}"
                          VerticalContentAlignment="Center" />
                <TextBox Width="200"
                         Margin="10,0,0,0"
                         Style="{StaticResource placeHolder}"
                         Tag="Enter Filter-Text"
                         DockPanel.Dock="Left"
                         Text="{Binding FilterText, UpdateSourceTrigger=PropertyChanged}" />
            </DockPanel>
        </GroupBox>
        <DataGrid x:Name="EpisodesGrid"
                  Grid.Row="1"
                  Margin="0,4,0,0"
                  AutoGenerateColumns="False"
                  ItemsSource="{Binding Episodes}"
                  CanUserAddRows="False"
                  CanUserDeleteRows="False"
                  CanUserResizeRows="False"
                  CanUserResizeColumns="False"
                  CanUserSortColumns="False"
                  CanUserReorderColumns="False"
                  IsSynchronizedWithCurrentItem="True">
            <DataGrid.Columns>
                <DataGridTemplateColumn Width="28">
                    <DataGridTemplateColumn.Header>
                        <CheckBox IsChecked="{Binding Path=DataContext.AllSelected, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"
                                  IsEnabled="{Binding Path=DataContext.Fetching, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource boolConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" />
                    </DataGridTemplateColumn.Header>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <CheckBox HorizontalAlignment="Center"
                                      IsChecked="{Binding Path=Selected, UpdateSourceTrigger=PropertyChanged}"
                                      IsEnabled="{Binding Path=DataContext.Fetching, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource boolConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn Header="Code"
                                    IsReadOnly="True"
                                    Binding="{Binding Code}" />
                <DataGridTemplateColumn Header="Title"
                                        IsReadOnly="True"
                                        Width="*">
                    <DataGridTemplateColumn.CellStyle>
                        <Style TargetType="DataGridCell">
                            <Setter Property="ToolTip"
                                    Value="{Binding Title}" />
                        </Style>
                    </DataGridTemplateColumn.CellStyle>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Title}"
                                       TextTrimming="CharacterEllipsis" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="Talent"
                                        IsReadOnly="True"
                                        Width="200">
                    <DataGridTemplateColumn.CellStyle>
                        <Style TargetType="DataGridCell">
                            <Setter Property="ToolTip"
                                    Value="{Binding TalentString}" />
                        </Style>
                    </DataGridTemplateColumn.CellStyle>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding TalentString}"
                                       TextTrimming="CharacterEllipsis" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn>
                    <DataGridTemplateColumn.Header>
                        <TextBlock Text="Play"
                                   TextAlignment="Center" />
                    </DataGridTemplateColumn.Header>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button Content="Audio"
                                    IsEnabled="{Binding HasAudio}"
                                    Command="{Binding DataContext.PlayAudioCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"
                                    CommandParameter="{Binding ElementName=EpisodesGrid, Path=SelectedItem}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn>
                    <DataGridTemplateColumn.Header>
                        <TextBlock Text="Play"
                                   TextAlignment="Center" />
                    </DataGridTemplateColumn.Header>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button Content="Video"
                                    IsEnabled="{Binding HasVideo}"
                                    Command="{Binding DataContext.PlayVideoCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"
                                    CommandParameter="{Binding ElementName=EpisodesGrid, Path=SelectedItem}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>
        <GroupBox Header="Details"
                  Margin="0,4,0,0"
                  Grid.Row="2"
                  Grid.ColumnSpan="2"
                  Padding="4">
            <ScrollViewer>
                <TextBlock TextWrapping="WrapWithOverflow">
                <Run Text="{Binding ElementName=EpisodesGrid, Path=SelectedItem.Title}"
                     FontWeight="Bold" /><Run Text=" (" /><Run Text="{Binding ElementName=EpisodesGrid, Path=SelectedItem.TalentString, Mode=OneWay}"
                                                               Foreground="IndianRed"
                                                               FontWeight="Bold" /><Run Text="): " /><Run Text="{Binding ElementName=EpisodesGrid, Path=SelectedItem.Synopsis}" /><Run Text=" (Duration: " /><Run Text="{Binding ElementName=EpisodesGrid, Path=SelectedItem.Duration}" /><Run Text=", PubDate: " /><Run Text="{Binding ElementName=EpisodesGrid, Path=SelectedItem.PubDate}" /><Run Text=", C9 Link" /><Run Text="{Binding ElementName=EpisodesGrid, Path=SelectedItem.Link}" /><Run Text="}" />
                </TextBlock>
            </ScrollViewer>
        </GroupBox>
        <StatusBar Grid.Row="3" Margin="0,4,0,0">
            <StatusBar.ItemsPanel>
                <ItemsPanelTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                    </Grid>
                </ItemsPanelTemplate>
            </StatusBar.ItemsPanel>
            <StatusBarItem>
                <TextBlock Text="{Binding StatusPrompt}"/>
            </StatusBarItem>
            <StatusBarItem Grid.Column="1">
                <ProgressBar Value="{Binding Progress}"
                             Width="200"
                             Height="16" />
            </StatusBarItem>
        </StatusBar>
    </Grid>
</Window>
